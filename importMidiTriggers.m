function TriggerMapping = importMidiTriggers(filename, dataLines)
%IMPORTFILE Import data from a text file
%  TRIGGERMAPPING = IMPORTFILE(FILENAME) reads data from text
%  file FILENAME for the default selection.  Returns the data as a table.
%
%  TRIGGERMAPPING = IMPORTFILE(FILE, DATALINES) reads data for
%  the specified row interval(s) of text file FILENAME. Specify
%  DATALINES as a positive scalar integer or a N-by-2 array of positive
%  scalar integers for dis-contiguous row intervals.
%
%  Example:
%  TriggerMapping = importfile("./QueleaPreset/Reaper_Quelea_Preset_cues.csv", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 05-Apr-2022 02:54:45
%
% Description: THis is an import function for the trigger mapping talbe 
% 
% Author: JessyJP (2020) % License: GPLv3 @ LICENCE.md
%

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 11);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["HTTP_URL", "ServerAPI", "MidiMapping", "Description", "GroupType", "ActionTypeArguments", "MidimsgType", "MidiChanel", "MidiNote_CC", "ExternalExecutable", "ExternalCmd"];
opts.VariableTypes = ["string", "string", "categorical", "string", "categorical", "categorical", "string", "double", "double", "string", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["HTTP_URL", "ServerAPI", "Description", "ExternalExecutable", "ExternalCmd"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["HTTP_URL", "ServerAPI", "MidiMapping", "Description", "GroupType", "ActionTypeArguments", "MidimsgType", "ExternalExecutable", "ExternalCmd"], "EmptyFieldRule", "auto");

% Import the data
TriggerMapping = readtable(filename, opts);

end