function configurationSettings = importConfigurationSettings(filename, dataLines)
%IMPORTFILE Import data from a text file
%  configurationSettings = IMPORTFILE(FILENAME) reads data from text file
%  FILENAME for the default selection.  Returns the data as a cell array.
%
%  configurationSettings = IMPORTFILE(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  configurationSettings = importfile("daw2server_settings.ini", [1, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 03-Apr-2022 23:48:39
%
% Description: THis is an import function for the process configuration 
% file
% 
% Author: JessyJP (2020) % License: GPLv3 @ LICENCE.md
%

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [1, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 2);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = "=";

% Specify column names and types
opts.VariableNames = ["ConfigurationProperty", "ConfigurationValue"];
opts.VariableTypes = ["char", "char"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "skip";

% Specify variable properties
opts = setvaropts(opts, ["ConfigurationProperty", "ConfigurationValue"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["ConfigurationProperty", "ConfigurationValue"], "EmptyFieldRule", "auto");

% Import the data
configurationSettings = readtable(filename, opts);

%% Convert to output type
configurationSettings = table2cell(configurationSettings);
numIdx = cellfun(@(x) ~isnan(str2double(x)), configurationSettings);
configurationSettings(numIdx) = cellfun(@(x) {str2double(x)}, configurationSettings(numIdx));
end
